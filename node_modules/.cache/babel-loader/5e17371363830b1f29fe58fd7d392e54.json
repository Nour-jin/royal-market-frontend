{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter(event => event.completed === true);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state = {\n  total: 0,\n  items: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload];\n      const updateBasket = item.map(el => {\n        if (el._id === action.payload._id) {\n          return Object.assign({}, ...el, {\n            quantity: el.quantity + action.payload.quantity\n          });\n        }\n\n        return el;\n      });\n      const totals = totalprice(updateBasket);\n      return {\n        items: updateBasket,\n        total: totals\n      };\n\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          return { ...el,\n            quantity: el.quantity + 1\n          };\n        }\n\n        return el;\n      });\n      console.log('INCROMENT', updateItems);\n      const totalsupdateItem = totalprice(updateItems);\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      };\n\n    case \"DECROMENT\":\n      const updateItemsminus = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          if (el.quantity > 1) {\n            return { ...el,\n              quantity: el.quantity - 1\n            };\n          }\n        }\n\n        return el;\n      });\n      const totalsupdateItemminus = totalprice(updateItemsminus);\n      return {\n        items: updateItemsminus,\n        total: totalsupdateItemminus\n      };\n\n    case \"GET_BASKET_LOCAL\":\n      console.log('local', action.payload);\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst totalprice = item => {\n  var totals = 0;\n  item.forEach(el => {\n    totals += el.quantity * el.price;\n  });\n  return totals;\n};\n\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload;\n      return { ...data,\n        quantity: 1\n      };\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      return { ...state,\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n        return { ...state,\n          quantity: state.quantity - 1\n        };\n      } else {\n        return { ...state,\n          quantity: state.quantity\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      const user = action.payload;\n      return {\n        user,\n        loggedIn: true\n      };\n\n    case \"LOGOUT_USER\":\n      return action.payload;\n\n    case \"PASS_WRONG\":\n      return action.payload;\n\n    case \"EMAIL_WRONG\":\n      return action.payload;\n\n    case \"GET_USER_LOCAL\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","filter","event","completed","basketReducer","total","items","item","updateBasket","map","el","_id","Object","assign","quantity","totals","totalprice","updateItems","console","log","totalsupdateItem","updateItemsminus","totalsupdateItemminus","forEach","price","itemReducer","data","basket","usersReducer","user","loggedIn"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter((event) => event.completed === true);\n    default:\n      return state;\n  }\n};\n\nexport const basketReducer = (state = { total:0, items:[]}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload]\n\n      const updateBasket = item.map(el => {\n        if (el._id === action.payload._id) {\n          return Object.assign({}, ...el, {quantity: el.quantity + action.payload.quantity })\n        }\n         \n        return el\n      })\n\n     const totals = totalprice(updateBasket)\n      return {\n        items: updateBasket, \n        total: totals,\n      }\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          return {...el, quantity: el.quantity +1}\n          }\n          return el\n        \n      })\n      console.log('INCROMENT', updateItems)\n      const totalsupdateItem = totalprice(updateItems)\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      }\n      case \"DECROMENT\":\n        const updateItemsminus = state.items.map(el => {\n          if (el._id === action.payload._id) {\n            if (el.quantity > 1) {\n              return {...el, quantity: el.quantity -1}\n            }\n          }\n          return el\n        })\n        const totalsupdateItemminus = totalprice(updateItemsminus)\n        return {\n          items: updateItemsminus,\n          total: totalsupdateItemminus\n        }\n    case \"GET_BASKET_LOCAL\":\n      console.log('local', action.payload)\n     return action.payload\n      \n    default:\n      return state;\n  }\n};\n\nconst totalprice = (item) => {\n  var totals = 0;\n      item.forEach(el => {\n        totals += el.quantity * el.price\n      })\n  return totals\n}\n\n\n\nexport const itemReducer = (state , action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload\n      return {\n        ...data,\n        quantity: 1\n      };\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n    case \"INCROMENT\":\n      return {\n        ...state,\n        quantity: state.quantity + 1\n      }\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n         return {...state,\n          quantity: state.quantity - 1\n            };\n      } else {\n       return {...state, quantity: state.quantity}\n      }\n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      const user = action.payload\n      return {\n        user,\n        loggedIn:true\n      };\n    case \"LOGOUT_USER\":\n      return action.payload\n    case \"PASS_WRONG\":\n      return action.payload\n    case \"EMAIL_WRONG\":\n      return action.payload\n    case \"GET_USER_LOCAL\":\n      return action.payload\n    default:\n      return state;\n  }\n  \n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}