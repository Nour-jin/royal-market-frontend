{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter(event => event.completed === true);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state = {\n  total: 0,\n  items: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload];\n      const updateBasket = item.every(el => {\n        return el._id !== action.payload._id;\n      });\n      const basketFilter = updateBasket.filter(el => {\n        return el._id !== action.payload._id;\n      });\n      const totals = totalprice(basketFilter);\n      return {\n        items: basketFilter,\n        total: totals\n      };\n\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          return { ...el,\n            quantity: el.quantity + 1\n          };\n        }\n\n        return el;\n      });\n      console.log('INCROMENT', updateItems);\n      const totalsupdateItem = totalprice(updateItems);\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      };\n\n    case \"DECROMENT\":\n      const updateItemsminus = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          if (el.quantity > 1) {\n            return { ...el,\n              quantity: el.quantity - 1\n            };\n          }\n        }\n\n        return el;\n      });\n      const totalsupdateItemminus = totalprice(updateItemsminus);\n      return {\n        items: updateItemsminus,\n        total: totalsupdateItemminus\n      };\n\n    case \"GET_BASKET_LOCAL\":\n      console.log('local', action.payload);\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nconst totalprice = item => {\n  var totals = 0;\n  item.forEach(el => {\n    totals += el.quantity * el.price;\n  });\n  return totals;\n};\n\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload;\n      return { ...data,\n        quantity: 1\n      };\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      return { ...state,\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n        return { ...state,\n          quantity: state.quantity - 1\n        };\n      } else {\n        return { ...state,\n          quantity: state.quantity\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      const user = action.payload;\n      return {\n        user,\n        loggedIn: true\n      };\n\n    case \"LOGOUT_USER\":\n      return action.payload;\n\n    case \"PASS_WRONG\":\n      return action.payload;\n\n    case \"EMAIL_WRONG\":\n      return action.payload;\n\n    case \"GET_USER_LOCAL\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","filter","event","completed","basketReducer","total","items","item","updateBasket","every","el","_id","basketFilter","totals","totalprice","updateItems","map","quantity","console","log","totalsupdateItem","updateItemsminus","totalsupdateItemminus","forEach","price","itemReducer","data","basket","usersReducer","user","loggedIn"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter((event) => event.completed === true);\n    default:\n      return state;\n  }\n};\n\n    export const basketReducer = (state = { total:0, items:[]}, action) => {\n    switch (action.type) {\n    case \"ADD_ITEM\":\n          const item = [...state.items, action.payload]\n         const updateBasket = item.every(el => {\n           return el._id !== action.payload._id\n         })\n      \n          const basketFilter = updateBasket.filter(el => {\n         return el._id !== action.payload._id\n           })\n         \n\n        \n       \n\n     const totals = totalprice(basketFilter)\n      return {\n        items: basketFilter, \n        total: totals,\n      }\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          return {...el, quantity: el.quantity +1}\n          }\n          return el\n      })\n      console.log('INCROMENT', updateItems)\n      const totalsupdateItem = totalprice(updateItems)\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      }\n      case \"DECROMENT\":\n        const updateItemsminus = state.items.map(el => {\n          if (el._id === action.payload._id) {\n            if (el.quantity > 1) {\n              return {...el, quantity: el.quantity -1}\n            }\n          }\n          return el\n        })\n        const totalsupdateItemminus = totalprice(updateItemsminus)\n        return {\n          items: updateItemsminus,\n          total: totalsupdateItemminus\n        }\n    case \"GET_BASKET_LOCAL\":\n      console.log('local', action.payload)\n     return action.payload\n      \n    default:\n      return state;\n  }\n};\n\nconst totalprice = (item) => {\n  var totals = 0;\n      item.forEach(el => {\n        totals += el.quantity * el.price\n      })\n  return totals\n}\n\n\n\nexport const itemReducer = (state , action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload\n      return {\n        ...data,\n        quantity: 1\n      };\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n    case \"INCROMENT\":\n      return {\n        ...state,\n        quantity: state.quantity + 1\n      }\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n         return {...state,\n          quantity: state.quantity - 1\n            };\n      } else {\n       return {...state, quantity: state.quantity}\n      }\n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      const user = action.payload\n      return {\n        user,\n        loggedIn:true\n      };\n    case \"LOGOUT_USER\":\n      return action.payload\n    case \"PASS_WRONG\":\n      return action.payload\n    case \"EMAIL_WRONG\":\n      return action.payload\n    case \"GET_USER_LOCAL\":\n      return action.payload\n    default:\n      return state;\n  }\n  \n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}