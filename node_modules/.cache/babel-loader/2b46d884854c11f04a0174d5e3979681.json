{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"WATCH_ITEM\":\n      state.items.map(el => {\n        if (el._id !== action.payload._id) {\n          return el;\n        }\n\n        return { ...el,\n          el\n        }; // <-- return current mapped element if no change\n      });\n\n    case \"GET_WATCH_LOCAL\":\n      return action.payload;\n\n    case \"DELETE_ITEM\":\n      return state.filter(el => el._id !== action.payload._id);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state = {\n  total: 0,\n  items: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const hasItem = state.items.some(el => el._id === action.payload._id);\n\n      if (hasItem) {\n        // update item\n        const updateItem = state.items.map(el => {\n          if (el._id === action.payload._id) {\n            return { ...el,\n              quantity: el.quantity + action.payload.quantity\n            };\n          }\n\n          return el; // <-- return current mapped element if no change\n        });\n        const totalPrice = totalprice(updateItem);\n        return { ...state,\n          items: updateItem,\n          total: totalPrice\n        };\n      } else {\n        // add item \n        const item = [...state.items, action.payload];\n        const totalPrice = totalprice(item);\n        return { ...state,\n          items: state.items.concat(action.payload),\n          total: totalPrice\n        };\n      }\n\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          return { ...el,\n            quantity: el.quantity + 1\n          };\n        }\n\n        return el;\n      });\n      const totalsupdateItem = totalprice(updateItems);\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      };\n\n    case \"DECROMENT\":\n      const updateItemsminus = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          if (el.quantity > 1) {\n            return { ...el,\n              quantity: el.quantity - 1\n            };\n          }\n        }\n\n        return el;\n      });\n      const totalsupdateItemminus = totalprice(updateItemsminus);\n      return {\n        items: updateItemsminus,\n        total: totalsupdateItemminus\n      };\n\n    case \"GET_BASKET_LOCAL\":\n      console.log('local', action.payload);\n      return action.payload;\n\n    case \"DELETE_ITEM\":\n      const deleteiTEM = state.items.filter(el => el._id !== action.payload._id);\n      const totalPriceD = totalprice(deleteiTEM);\n      return { ...state,\n        items: deleteiTEM,\n        total: totalPriceD\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst totalprice = item => {\n  var totals = 0;\n  item.forEach(el => {\n    totals += el.quantity * el.price;\n  });\n  return totals;\n};\n\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload;\n      return { ...data,\n        quantity: 1\n      };\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      return { ...state,\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n        return { ...state,\n          quantity: state.quantity - 1\n        };\n      } else {\n        return { ...state,\n          quantity: state.quantity\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      const user = action.payload;\n      return {\n        user,\n        loggedIn: true\n      };\n\n    case \"LOGOUT_USER\":\n      return action.payload;\n\n    case \"PASS_WRONG\":\n      return action.payload;\n\n    case \"EMAIL_WRONG\":\n      return action.payload;\n\n    case \"GET_USER_LOCAL\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","items","map","el","_id","filter","basketReducer","total","hasItem","some","updateItem","quantity","totalPrice","totalprice","item","concat","updateItems","totalsupdateItem","updateItemsminus","totalsupdateItemminus","console","log","deleteiTEM","totalPriceD","totals","forEach","price","itemReducer","data","completed","basket","usersReducer","user","loggedIn"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state , action) => {\n  switch (action.type) {\n    case \"WATCH_ITEM\":\n      state.items.map(el => {\n        if (el._id !== action.payload._id) {\n          return el\n        }\n        return {\n          ...el,el\n        }  // <-- return current mapped element if no change\n      })\n      \n      case \"GET_WATCH_LOCAL\":\n       return action.payload\n    case \"DELETE_ITEM\":\n      return state.filter(el=> el._id !== action.payload._id)\n    default:\n      return state;\n  }\n};\n\n    export const basketReducer = (state = { total:0, items:[]}, action) => {\n    switch (action.type) {\n      case \"ADD_ITEM\":\n        const hasItem = state.items.some(el => el._id === action.payload._id);\n      \n        if (hasItem) {\n          // update item\n         const updateItem = state.items.map(el => {\n            if (el._id === action.payload._id) {\n              return {\n                ...el,\n                quantity: el.quantity + action.payload.quantity\n              }\n            }\n            return el; // <-- return current mapped element if no change\n          })\n          const totalPrice = totalprice(updateItem)\n          return {\n            ...state,\n            items: updateItem,\n            total : totalPrice\n          };\n        } else {\n          // add item \n          const item = [...state.items, action.payload]\n          const totalPrice = totalprice(item)\n          return {\n            ...state,\n            items: state.items.concat(action.payload),\n            total : totalPrice\n          };\n        }\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          return {...el, quantity: el.quantity +1}\n          }\n          return el\n      })\n      const totalsupdateItem = totalprice(updateItems)\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      }\n      case \"DECROMENT\":\n        const updateItemsminus = state.items.map(el => {\n          if (el._id === action.payload._id) {\n            if (el.quantity > 1) {\n              return {...el, quantity: el.quantity -1}\n            }\n          }\n          return el\n        })\n        const totalsupdateItemminus = totalprice(updateItemsminus)\n        return {\n          items: updateItemsminus,\n          total: totalsupdateItemminus\n        }\n    case \"GET_BASKET_LOCAL\":\n      console.log('local', action.payload)\n     return action.payload\n      case \"DELETE_ITEM\":\n        const deleteiTEM = state.items.filter(el => el._id !== action.payload._id)\n        const totalPriceD = totalprice(deleteiTEM)\n        return {\n          ...state,\n          items: deleteiTEM,\n          total:totalPriceD\n      } \n    default:\n      return state;\n  }\n    };\n\n\nconst totalprice = (item) => {\n  var totals = 0;\n      item.forEach(el => {\n        totals += el.quantity * el.price\n      })\n  return totals\n}\n\n\n\nexport const itemReducer = (state , action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload\n      return {\n        ...data,\n        quantity: 1\n      };\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n    case \"INCROMENT\":\n      return {\n        ...state,\n        quantity: state.quantity + 1\n      }\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n         return {...state,\n          quantity: state.quantity - 1\n            };\n      } else {\n       return {...state, quantity: state.quantity}\n      }\n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const usersReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      const user = action.payload\n      return {\n        user,\n        loggedIn:true\n      };\n    case \"LOGOUT_USER\":\n      return action.payload\n    case \"PASS_WRONG\":\n      return action.payload\n    case \"EMAIL_WRONG\":\n      return action.payload\n    case \"GET_USER_LOCAL\":\n      return action.payload\n    default:\n      return state;\n  }\n  \n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}