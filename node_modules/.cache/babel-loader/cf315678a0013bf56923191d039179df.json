{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter(event => event.completed === true);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_BASKET\":\n      return action.payload.filter(event => event.basket === true);\n\n    case \"INCROMENT\":\n      return { ...state,\n        totalprice: state.price + 1 * action.payload,\n        qantity: state.qantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.price > action.payload) {\n        return { ...state,\n          totalprice: state.price - 1 * action.payload,\n          qantity: state.qantity - 1\n        };\n      } else {\n        return { ...state,\n          totalprice: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      return {\n        totalprice: state.totalprice + 1 * action.payload,\n        qantity: state.qantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.totalprice > action.payload) {\n        return {\n          totalprice: state.totalprice - 1 * action.payload,\n          qantity: state.qantity - 1\n        };\n      } else {\n        return {\n          totalprice: action.payload\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const countReducer = (state, action) => {\n  switch (action.type) {\n    case \"INCROMENT\":\n      return {\n        count: action.payload * state.count + 1\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","filter","event","completed","basketReducer","basket","totalprice","price","qantity","itemReducer","countReducer","count"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter((event) => event.completed === true);\n    default:\n      return state;\n  }\n};\n\nexport const basketReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_BASKET\":\n      return action.payload.filter((event) => event.basket === true);\n    case \"INCROMENT\":\n      return {...state,\n        totalprice: state.price + 1 * action.payload,\n        qantity: state.qantity + 1\n      };\n    case \"DECROMENT\":\n      if (state.price > action.payload) {\n        return {...state,\n          totalprice: state.price - 1 * action.payload,\n          qantity: state.qantity - 1\n        };\n      } else {\n        return  {...state,totalprice: action.payload }\n      }\n    default:\n      return state;\n  }\n};\n\n\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n        case \"INCROMENT\":\n          return {\n            totalprice: state.totalprice + 1 * action.payload,\n            qantity: state.qantity + 1\n          };\n        case \"DECROMENT\":\n          if (state.totalprice > action.payload) {\n            return {\n              totalprice: state.totalprice - 1 * action.payload,\n              qantity: state.qantity - 1\n            };\n          } else {\n            return  {totalprice: action.payload }\n          }\n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const countReducer = (state, action) => {\n  switch (action.type) {\n      case \"INCROMENT\":\n        return {count: action.payload * state.count+1 };\n    default:\n      return state;\n  }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}