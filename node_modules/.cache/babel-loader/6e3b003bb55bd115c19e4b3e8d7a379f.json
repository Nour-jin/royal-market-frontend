{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter(event => event.completed === true);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state = {\n  total: 0,\n  items: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload];\n      var totals = 0;\n      item.forEach(el => {\n        totals += el.quantity * el.price;\n      });\n      return {\n        items: item,\n        total: totals\n      };\n\n    case \"INCROMENT\":\n      return {\n        items: [{ ...items,\n          quantity: action.payload + 1\n        }]\n      };\n\n    case \"DECROMENT\":\n      if (action.payload > 1) {\n        return [...state.items, {\n          quantity: action.payload - 1\n        }];\n      } else {\n        return { ...state.items,\n          quantity: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload;\n      return { ...data,\n        quantity: 1\n      };\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      return { ...state,\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n        return { ...state,\n          quantity: state.quantity - 1\n        };\n      } else {\n        return { ...state,\n          quantity: state.quantity\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","filter","event","completed","basketReducer","total","items","item","totals","forEach","el","quantity","price","itemReducer","data","basket"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter((event) => event.completed === true);\n    default:\n      return state;\n  }\n};\n\nexport const basketReducer = (state = { total:0, items:[]}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload]\n      var totals = 0;\n      item.forEach(el => {\n        totals += el.quantity * el.price\n      })\n      return {\n        items: item, \n        total: totals,\n      }\n    case \"INCROMENT\":\n      \n        return {items:[{...items, quantity: action.payload + 1}]}\n        \n      case \"DECROMENT\":\n        if (action.payload > 1) {\n           return [...state.items,\n           { quantity: action.payload - 1}\n        ];\n        } else {\n         return {...state.items, quantity: action.payload}\n        }\n    default:\n      return state;\n  }\n};\n\n\n\n\nexport const itemReducer = (state , action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload\n      return {\n        ...data,\n        quantity: 1\n      };\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n    case \"INCROMENT\":\n      return {\n        ...state,\n        quantity: state.quantity + 1\n      }\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n         return {...state,\n          quantity: state.quantity - 1\n            };\n      } else {\n       return {...state, quantity: state.quantity}\n      }\n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}