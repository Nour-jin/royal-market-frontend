{"ast":null,"code":"var _jsxFileName = \"/Users/noureddinnasrallah/Downloads/online-shop-main/src/components/cards.js\",\n    _s = $RefreshSig$();\n\nimport { React, useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cards = ({\n  card,\n  data,\n  setData\n}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  const [input, setInput] = useState(edit ? {\n    title: edit.value,\n    position: edit.value,\n    price: edit.value\n  } : ''); // const inputRef = useRef(null);\n\n  useEffect(() => {// inputRef.current.focus();\n  });\n  console.log(edit);\n\n  const deleteHandler = e => {\n    setData(data.filter(el => el.id !== card.id));\n  };\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  const updateTodo = (dataId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    const newEdit = data.map(item => {\n      if (item._id === dataId) {\n        item = newValue;\n      }\n\n      return item;\n    });\n    setData(newEdit);\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setInput({\n      [e.target.name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    submitUpdate({\n      text: input\n    });\n    setInput('');\n  };\n\n  const editHandle = e => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Update your item\",\n          value: input,\n          onChange: handleChange,\n          name: \"text\" // ref={inputRef}\n          ,\n          className: \"todo-input edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          className: \"todo-button edit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n\n  const updateButton = e => {\n    if (!edit.value) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEdit({\n          id: card._id,\n          value: card.title\n        }),\n        className: \"edit-icon\",\n        children: \" update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-4 col-sm-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        borderColor: card.website ? \"\" : \"red\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            maxWidth: \"100%\"\n          },\n          src: card.img,\n          alt: card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [edit.value ? editHandle() : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: card.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 39\n        }, this), updateButton(), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: card.position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), edit.value ? editHandle() : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: card.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 40\n        }, this), updateButton(), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteHandler,\n        className: \"trash-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"Ydwga5dINE1trOWz6D6/FfZXpGU=\");\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/noureddinnasrallah/Downloads/online-shop-main/src/components/cards.js"],"names":["React","useRef","useState","useEffect","Cards","card","data","setData","edit","setEdit","id","value","input","setInput","title","position","price","console","log","deleteHandler","e","filter","el","submitUpdate","updateTodo","dataId","newValue","text","test","newEdit","map","item","_id","handleChange","target","name","handleSubmit","preventDefault","editHandle","updateButton","borderColor","website","maxWidth","img"],"mappings":"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","sourcesContent":["import {React, useRef, useState, useEffect} from \"react\";\n\n\nconst Cards = ({ card, data, setData }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n  const [input, setInput] = useState(edit ? {\n    title: edit.value,\n    position: edit.value,\n    price: edit.value,\n  } :'');\n \n // const inputRef = useRef(null);\n\n  useEffect(() => {\n   // inputRef.current.focus();\n  });\n\nconsole.log(edit)\n\n\n  const deleteHandler = (e) => {\n    setData(data.filter(el => el.id !== card.id))\n  }\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n  const updateTodo = (dataId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n    const newEdit = data.map(item => {\n      if (item._id === dataId) {\n      item = newValue\n      } \n        return item\n    })\n    setData(newEdit)\n  };\n  \n  const handleChange = e => {\n    const value = e.target.value;\n    setInput({[e.target.name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  \n    submitUpdate({text:input});\n    setInput('');\n  };\n\n\n  \nconst editHandle = (e) => {\n  return (\n      <form >\n      <>\n          <input\n            placeholder='Update your item'\n            value={input}\n            onChange={handleChange}\n            name='text'\n           // ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Update\n          </button>\n         </>\n         </form>\n    );\n}\n\n  const updateButton = (e) => {\n    if (!edit.value) {\n     return (\n     <button\n          onClick={() => setEdit({ id: card._id, value: card.title })}\n          className='edit-icon'\n       > update</button>\n  )\n  }\n}\n\n\n\n  return (\n    <div className=\"col-md-4 col-sm-6\">\n      <div className=\"card\" style={{ borderColor: card.website ? \"\" : \"red\" }}>\n        <div className=\"card-header\">\n          <img style={{ maxWidth: \"100%\" }} src={card.img} alt={card.name} />\n        </div>\n        <div className=\"card-body\">\n         {edit.value ? editHandle() : <h2 >{card.title}</h2>}{updateButton()}\n          <h5>{card.position}</h5>\n          {edit.value ? editHandle() : <div>{card.price}</div>}{updateButton()}\n          <div></div>\n          <div></div>\n        </div>\n       \n        <button onClick={deleteHandler} className=\"trash-btn\">\n                    <i className=\"fas fa-trash\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}