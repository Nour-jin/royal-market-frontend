{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter(event => event.completed === true);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state = {\n  total: 0,\n  items: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload];\n      const totalPrice = item.map(el => {\n        return el.quantity * el.price;\n      });\n      return {\n        items: item,\n        total: totalPrice\n      };\n\n    case \"INCROMENT\":\n      return {\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.price > action.payload) {\n        return {\n          quantity: state.quantity - 1\n        };\n      } else {\n        return {\n          price: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n};\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload;\n      return { ...data,\n        quantity: 1\n      };\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      console.log('state', state);\n      return { ...state,\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n        return { ...state,\n          quantity: state.quantity - 1\n        };\n      } else {\n        return { ...state,\n          quantity: 1\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const countReducer = (state, action) => {\n  switch (action.type) {\n    case \"INCROMENT\":\n      return {\n        count: action.payload * state.count + 1\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","filter","event","completed","basketReducer","total","items","item","totalPrice","map","el","quantity","price","itemReducer","data","basket","console","log","countReducer","count"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMI,YAAY,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAOD,MAAM,CAACE,OAAP,CAAeE,MAAf,CAAuBC,KAAD,IAAWA,KAAK,CAACC,SAAN,KAAoB,IAArD,CAAP;;AACF;AACE,aAAOP,KAAP;AAJJ;AAMD,CAPM;AASP,OAAO,MAAMQ,aAAa,GAAG,CAACR,KAAK,GAAG;AAACS,EAAAA,KAAK,EAAC,CAAP;AAAUC,EAAAA,KAAK,EAAC;AAAhB,CAAT,EAA8BT,MAA9B,KAAyC;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACA,YAAMS,IAAI,GAAG,CAAC,GAAGX,KAAK,CAACU,KAAV,EAAiBT,MAAM,CAACE,OAAxB,CAAb;AACC,YAAMS,UAAU,GAAGD,IAAI,CAACE,GAAL,CAASC,EAAE,IAAI;AAAE,eAAOA,EAAE,CAACC,QAAH,GAAcD,EAAE,CAACE,KAAxB;AAA8B,OAA/C,CAAnB;AACC,aAAO;AACLN,QAAAA,KAAK,EAAEC,IADF;AAELF,QAAAA,KAAK,EAAEG;AAFF,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO;AACNG,QAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,GAAiB;AADrB,OAAP;;AAGF,SAAK,WAAL;AACE,UAAIf,KAAK,CAACgB,KAAN,GAAcf,MAAM,CAACE,OAAzB,EAAkC;AAChC,eAAO;AACLY,UAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,GAAiB;AADtB,SAAP;AAGD,OAJD,MAIO;AACL,eAAQ;AAACC,UAAAA,KAAK,EAAEf,MAAM,CAACE;AAAf,SAAR;AACD;;AACH;AACE,aAAOH,KAAP;AArBJ;AAuBD,CAxBM;AA6BP,OAAO,MAAMiB,WAAW,GAAG,CAACjB,KAAD,EAASC,MAAT,KAAoB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,YAAMgB,IAAI,GAAGjB,MAAM,CAACE,OAApB;AACA,aAAO,EACL,GAAGe,IADE;AAELH,QAAAA,QAAQ,EAAE;AAFL,OAAP;;AAIF,SAAK,cAAL;AACE,aAAO,EACL,GAAGf,KADE;AAELO,QAAAA,SAAS,EAAE,CAACN,MAAM,CAACE,OAAP,CAAeI;AAFtB,OAAP;;AAIA,SAAK,eAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELmB,QAAAA,MAAM,EAAE,CAAClB,MAAM,CAACE,OAAP,CAAegB;AAFnB,OAAP;;AAIJ,SAAK,WAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBrB,KAApB;AACA,aAAO,EACL,GAAGA,KADE;AAELe,QAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,GAAiB;AAFtB,OAAP;;AAIF,SAAK,WAAL;AACE,UAAIf,KAAK,CAACe,QAAN,GAAiB,CAArB,EAAwB;AACrB,eAAO,EAAC,GAAGf,KAAJ;AACNe,UAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,GAAiB;AADrB,SAAP;AAGF,OAJD,MAIO;AACN,eAAO,EAAC,GAAGf,KAAJ;AAAWe,UAAAA,QAAQ,EAAC;AAApB,SAAP;AACA;;AAEH,SAAK,aAAL;AACE,aAAOd,MAAM,CAACE,OAAd;;AACF,SAAK,aAAL;AACE,aAAOF,MAAM,CAACE,OAAd;;AACF;AACE,aAAOH,KAAP;AArCJ;AAuCD,CAxCM;AA0CP,OAAO,MAAMsB,YAAY,GAAG,CAACtB,KAAD,EAAQC,MAAR,KAAmB;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACE,aAAO;AAACqB,QAAAA,KAAK,EAAEtB,MAAM,CAACE,OAAP,GAAiBH,KAAK,CAACuB,KAAvB,GAA6B;AAArC,OAAP;;AACJ;AACE,aAAOvB,KAAP;AAJJ;AAMD,CAPM","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter((event) => event.completed === true);\n    default:\n      return state;\n  }\n};\n\nexport const basketReducer = (state = {total:0, items:[]}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n    const item = [...state.items, action.payload]\n     const totalPrice = item.map(el => { return el.quantity * el.price})\n      return {\n        items: item,\n        total: totalPrice\n      }\n    case \"INCROMENT\":\n      return {\n       quantity: state.quantity + 1\n      };\n    case \"DECROMENT\":\n      if (state.price > action.payload) {\n        return {\n          quantity: state.quantity - 1\n        };\n      } else {\n        return  {price: action.payload }\n      }\n    default:\n      return state;\n  }\n};\n\n\n\n\nexport const itemReducer = (state , action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload\n      return {\n        ...data,\n        quantity: 1\n      };\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n    case \"INCROMENT\":\n      console.log('state',state)\n      return {\n        ...state,\n        quantity: state.quantity + 1\n      }\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n         return {...state,\n          quantity: state.quantity - 1\n            };\n      } else {\n       return {...state, quantity:1}\n      }\n       \n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const countReducer = (state, action) => {\n  switch (action.type) {\n      case \"INCROMENT\":\n        return {count: action.payload * state.count+1 };\n    default:\n      return state;\n  }\n};\n\n\n\n"]},"metadata":{},"sourceType":"module"}