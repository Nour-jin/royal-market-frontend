{"ast":null,"code":"export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter(event => event.completed === true);\n\n    default:\n      return state;\n  }\n};\nexport const basketReducer = (state = {\n  total: 0,\n  items: []\n}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload];\n      const totals = totalprice(item);\n      return {\n        items: item,\n        total: totals\n      };\n\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {// el.quantity += 1\n        }\n\n        console.log('map', el);\n        return el;\n      });\n      console.log('INCROMENT', updateItems);\n      const totalsupdateItem = totalprice(updateItems);\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      };\n\n    case \"DECROMENT\":\n      const updateItemsminus = state.items.map(el => {\n        if (el._id === action.payload._id) {\n          if (el.quantity > 1) {\n            el.quantity -= 1;\n          }\n        }\n\n        return el;\n      });\n      const totalsupdateItemminus = totalprice(updateItemsminus);\n      return {\n        items: updateItemsminus,\n        total: totalsupdateItemminus\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst totalprice = item => {\n  var totals = 0;\n  item.forEach(el => {\n    totals += el.quantity * el.price;\n  });\n  return totals;\n};\n\nexport const itemReducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload;\n      return { ...data,\n        quantity: 1\n      };\n\n    case \"TOGGLE_WATCH\":\n      return { ...state,\n        completed: !action.payload.completed\n      };\n\n    case \"TOGGLE_BASKET\":\n      return { ...state,\n        basket: !action.payload.basket\n      };\n\n    case \"INCROMENT\":\n      return { ...state,\n        quantity: state.quantity + 1\n      };\n\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n        return { ...state,\n          quantity: state.quantity - 1\n        };\n      } else {\n        return { ...state,\n          quantity: state.quantity\n        };\n      }\n\n    case \"DELETE_ITEM\":\n      return action.payload;\n\n    case \"UPDATE_ITEM\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/noureddinnasrallah/Documents/online-shop-frontend/src/components/reducers/reducer.js"],"names":["reducer","state","action","type","payload","watchReducer","filter","event","completed","basketReducer","total","items","item","totals","totalprice","updateItems","map","el","_id","console","log","totalsupdateItem","updateItemsminus","quantity","totalsupdateItemminus","forEach","price","itemReducer","data","basket"],"mappings":"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","sourcesContent":["export const reducer = (state, action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const watchReducer = (state, action) => {\n  switch (action.type) {\n    case \"GETS_DATA_COMPLETED\":\n      return action.payload.filter((event) => event.completed === true);\n    default:\n      return state;\n  }\n};\n\nexport const basketReducer = (state = { total:0, items:[]}, action) => {\n  switch (action.type) {\n    case \"ADD_ITEM\":\n      const item = [...state.items, action.payload]\n     const totals = totalprice(item)\n      return {\n        items: item, \n        total: totals,\n      }\n    case \"INCROMENT\":\n      const updateItems = state.items.map(el => {\n        if (el._id === action.payload._id) {\n        // el.quantity += 1\n        }\n        console.log('map', el)\n        return el\n        \n      })\n      console.log('INCROMENT', updateItems)\n      const totalsupdateItem = totalprice(updateItems)\n      return {\n        items: updateItems,\n        total: totalsupdateItem\n      }\n      case \"DECROMENT\":\n        const updateItemsminus = state.items.map(el => {\n          if (el._id === action.payload._id) {\n            if (el.quantity > 1) {\n               el.quantity -= 1\n            }\n          }\n          return el\n        })\n        const totalsupdateItemminus = totalprice(updateItemsminus)\n        return {\n          items: updateItemsminus,\n          total: totalsupdateItemminus\n        }\n    default:\n      return state;\n  }\n};\n\nconst totalprice = (item) => {\n  var totals = 0;\n      item.forEach(el => {\n        totals += el.quantity * el.price\n      })\n  return totals\n}\n\n\n\nexport const itemReducer = (state , action) => {\n  switch (action.type) {\n    case \"FATCH_SUCCESS\":\n      const data = action.payload\n      return {\n        ...data,\n        quantity: 1\n      };\n    case \"TOGGLE_WATCH\":\n      return {\n        ...state,\n        completed: !action.payload.completed,\n      };\n      case \"TOGGLE_BASKET\":\n        return {\n          ...state,\n          basket: !action.payload.basket,\n        };\n    case \"INCROMENT\":\n      return {\n        ...state,\n        quantity: state.quantity + 1\n      }\n    case \"DECROMENT\":\n      if (state.quantity > 1) {\n         return {...state,\n          quantity: state.quantity - 1\n            };\n      } else {\n       return {...state, quantity: state.quantity}\n      }\n    case \"DELETE_ITEM\":\n      return action.payload;\n    case \"UPDATE_ITEM\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}